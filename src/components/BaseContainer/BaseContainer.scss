.container {
  background-color: color('ice');
  margin: 0 auto;
  padding: 0 spacing();
  width: 100%;

  @each $breakpoint in map-keys($media-breakpoints) {
    &:not(.container--fullwidth) {
      @include after-breakpoint($breakpoint) {
        max-width: map-get($container-breakpoints, $breakpoint);
      }
    }
  }
}

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin: 0 -1 * spacing();

  &--center-columns {
    justify-content: center;
  }

  &--vertically-centered {
    align-items: cetner;
  }
}

.column {
  // `0px` is for IE11
  flex: 1 1 0px;
  max-width: 100%;
  padding: 0 spacing('half');
  position: relative;
  // Responsive columns

  @each $breakpoint in map-keys($media-breakpoints) {
    &--#{$breakpoint} {
      @include until-breakpoint($breakpoint) {
        flex: 0 1 auto;
        width: 100%;
      }
    }
  }
  // Fractional columns

  @for $i from 1 through $grid-columns {
    &--#{$i} {
      @include column-width($i);

      @each $breakpoint in map-keys($media-breakpoints) {
        &-#{$breakpoint} {
          @include after-breakpoint($breakpoint) {
            @include column-width($i);
          }
        }
      }
    }
    // Offsets
    &--offset-#{$i} {
      margin-left: percentage($i, $grid-columns);

      @each $breakpoint in map-keys($media-breakpoints) {
        &-#{$breakpoint} {
          @include after-breakpoint($breakpoint) {
            margin-left: percentage($i, $grid-columns);
          }
        }
      }
    }
    // Column order
    &--order-#{$i} {
      order: $i;

      @each $breakpoint in map-keys($media-breakpoints) {
        &-#{$breakpoint} {
          @include after-breakpoint($breakpoint) {
            order: $i;
          }
        }
      }
    }

    &--order-first {
      order: -1;

      @each $breakpoint in map-keys($media-breakpoints) {
        &-#{$breakpoint} {
          @include after-breakpoint($breakpoint) {
            order: -1;
          }
        }
      }
    }

    &--order-last {
      order: $grid-columns + 1;

      @each $breakpoint in map-keys($media-breakpoints) {
        &-#{$breakpoint} {
          @include after-breakpoint($breakpoint) {
            order: $grid-columns + 1;
          }
        }
      }
    }
  }
  // Fit column to content
  &--narrow {
    flex: none;

    @each $breakpoint in map-keys($media-breakpoints) {
      &-until-#{$breakpoint} {
        @include until-breakpoint($breakpoint) {
          flex: none;
        }
      }

      &-before-#{$breakpoint} {
        @include after-breakpoint($breakpoint) {
          flex: none;
        }
      }
    }
  }
}
