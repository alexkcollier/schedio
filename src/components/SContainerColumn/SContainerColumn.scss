.column {
  /*
   *`0px` is for IE11
   * stylelint-disable length-zero-no-unit
   * prettier-disable-start
   */
  flex: 1 1 0;
  max-width: 100%;
  padding: spacing('half');
  position: relative;

  /*
   * prettier-disable-end
   * stylelint-enable length-zero-no-unit
   */

  // Responsive columns (sm, md, lg, xl)
  @each $breakpoint in map-keys($media-breakpoints) {
    &--#{$breakpoint} {
      @include until-breakpoint($breakpoint) {
        flex: 0 1 auto;
        width: 100%;
      }
    }
  }

  // Fractional columns (.column--1, .column--md-1)
  // `&-` ensures proper BEM suffix for column sizes/breakpoints. (i.e.: '.column--md-1' not '.column-md-1'
  &- {
    @include generate-all-breakpoints-after {
      @for $i from 1 through $grid-columns {
        &-#{$i} {
          @include column-width($i);
        }
      }
    }
  }

  // Offsets
  &--offset {
    @include generate-all-breakpoints-after {
      @for $i from 1 through $grid-columns {
        &-#{$i} {
          margin-left: percentage($i, $grid-columns);
        }
      }
    }
  }

  // Column order
  &--order {
    @include generate-all-breakpoints-after {
      @for $i from 1 through $grid-columns {
        &-#{$i} {
          order: $i;
        }
      }
    }
  }

  &--order-first {
    @include generate-all-breakpoints-after {
      order: -1;
    }
  }

  &--order-last {
    @include generate-all-breakpoints-after {
      order: $grid-columns + 1;
    }
  }

  // Fit column to content
  &--narrow {
    @include generate-all-breakpoints {
      flex: none;
    }
  }
}
